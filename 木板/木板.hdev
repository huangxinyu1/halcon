<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.1.0">
<procedure name="main">
<interface/>
<body>
<c></c>
<c>**********************************************</c>
<c>***************木板纹理识别</c>
<c>**********************************************</c>
<c></c>
<c>*工业需求</c>
<c>*1.二维识别 -识别定位 --OCR一维码二维码  ---测量识别   --缺陷检测  --运动控制手眼标定抓取</c>
<c>*2.三维   -双目标定   -点与数据重建</c>
<c>*</c>
<c>*</c>
<c>*识别大体流程</c>
<c>*1.读入图片</c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2]" as_ord="1">list_files ('C:/Users/Administrator/Desktop/木板', ['files','follow_links'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,3]" as_ord="1">tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima|hobj)$','ignore_case'], ImageFiles)</l>
<c>*准备数组装特征向量</c>
<l>FeaturesExtended := []</l>
<l>FeaturesExtended1 := []</l>
<c></c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">for Index := 0 to |ImageFiles| - 1 by 1</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">    read_image (Image, ImageFiles[Index])</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<l>    dev_close_window ()</l>
<l>    get_image_size (Image, Width, Height)</l>
<c>    </c>
<l>    dev_open_window (0, 0, Width/5, Height/5, 'black', WindowHandle)</l>
<l>    dev_display (Image)</l>
<c>    *三颜色转灰度图</c>
<l>    rgb1_to_gray (Image, GrayImage)</l>
<c>    *二值化提取木板所在的区域</c>
<l>    threshold (GrayImage, Region, 31, 254)</l>
<c>    *断开连通域</c>
<l>    connection (Region, ConnectedRegions)</l>
<c>    *面积选择选出木板所在区域</c>
<c>    </c>
<l>    select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 28935.2, 38564.8)</l>
<l>    Classes := ['apple','beech','cherry','maple','oak']</l>
<c>    *生成灰度图像的共生矩阵（计算给定区域的灰度特征值，特征提取）</c>
<c>    *参数（计算共生矩阵灰度值所对应的区域，对应灰度值的区域图像，要识别灰度值的数量是多少，要被计算的共生矩阵的方向是多少，灰度值的能量，灰度值的相关性，灰度值的均匀性，灰度值的对比度）</c>
<l>    cooc_feature_image (Image, Image, 6, 90, Energy, Correlation, Homogeneity, Contrast)</l>
<c>    *由边缘检测进行特征提取（进一步加入特征灰度值的绝对直方图特征）</c>
<c>    *参数（图像，提取的边缘幅度图像，所用的算法，3*3的模板）</c>
<l>    sobel_amp (Image, EdgeAmplitude, 'sum_abs', 3)</l>
<c>    *计算灰度值的绝对直方图</c>
<c>    *参数（要计算灰度直方图的区域，要计算灰度直方图对应的图像，量化因子，计算之后的结果）</c>
<l>    gray_histo_abs (EdgeAmplitude, EdgeAmplitude, 8, AbsoluteHistoEdgeAmplitude)</l>
<c>    *装入特征向量数组</c>
<l>    FeaturesExtended := [Energy,Correlation,Homogeneity,Contrast]</l>
<l>    FeaturesExtended := [FeaturesExtended,AbsoluteHistoEdgeAmplitude]</l>
<c>    *生成灰度图像的共生矩阵（计算给定区域的灰度特征值，特征提取）选取木板所对应的区域</c>
<c>    *参数（计算共生矩阵灰度值所对应的区域，对应灰度值的区域图像，要识别灰度值的数量是多少，要被计算的共生矩阵的方向是多少，灰度值的能量，灰度值的相关性，灰度值的均匀性，灰度值的对比度）</c>
<l>    cooc_feature_image (SelectedRegions, Image, 6, 90, Energy, Correlation, Homogeneity, Contrast)</l>
<c>    *由边缘检测进行特征提取（进一步加入特征灰度值的绝对直方图特征）</c>
<c>    *参数（图像，提取的边缘幅度图像，所用的算法，3*3的模板）</c>
<l>    sobel_amp (Image, EdgeAmplitude, 'sum_abs', 3)</l>
<c>    *计算灰度值的绝对直方图</c>
<c>    *参数（要计算灰度直方图的区域，要计算灰度直方图对应的图像，量化因子，计算之后的结果）</c>
<l>    gray_histo_abs (EdgeAmplitude, EdgeAmplitude, 8, AbsoluteHistoEdgeAmplitude)</l>
<c>    *装入特征向量数组</c>
<l>    FeaturesExtended1 := [FeaturesExtended,Energy, Correlation, Homogeneity, Contrast]</l>
<l>    FeaturesExtended1 := [FeaturesExtended1,AbsoluteHistoEdgeAmplitude]</l>
<l>    NumFeatures := |FeaturesExtended1|</l>
<l>    NumClasses := |Classes|</l>
<l>    NumHidden := 15</l>
<c>    </c>
<c>    *2.创建分类器</c>
<l>    create_class_mlp (NumFeatures, 15, 5, 'softmax', 'normalization', 10, 42, MLPHandle)</l>
<c>    *添加样本</c>
<l>    for i := 0 to |ImageFiles|-1 by 1</l>
<l>        read_image (Image, ImageFiles[i])</l>
<c>        *三颜色转灰度图</c>
<l>        rgb1_to_gray (Image, GrayImage)</l>
<c>        *二值化提取木板所在的区域</c>
<l>        threshold (GrayImage, Region, 31, 254)</l>
<c>        *断开连通域</c>
<l>        connection (Region, ConnectedRegions)</l>
<c>        *面积选择选出木板所在区域</c>
<c>        </c>
<l>        select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 28935.2, 38564.8)</l>
<l>        Classes := ['apple','beech','cherry','maple','oak']</l>
<c>        *生成灰度图像的共生矩阵（计算给定区域的灰度特征值，特征提取）</c>
<c>        *参数（计算共生矩阵灰度值所对应的区域，对应灰度值的区域图像，要识别灰度值的数量是多少，要被计算的共生矩阵的方向是多少，灰度值的能量，灰度值的相关性，灰度值的均匀性，灰度值的对比度）</c>
<l>        cooc_feature_image (Image, Image, 6, 90, Energy, Correlation, Homogeneity, Contrast)</l>
<c>        *由边缘检测进行特征提取（进一步加入特征灰度值的绝对直方图特征）</c>
<c>        *参数（图像，提取的边缘幅度图像，所用的算法，3*3的模板）</c>
<l>        sobel_amp (Image, EdgeAmplitude, 'sum_abs', 3)</l>
<c>        *计算灰度值的绝对直方图</c>
<c>        *参数（要计算灰度直方图的区域，要计算灰度直方图对应的图像，量化因子，计算之后的结果）</c>
<l>        gray_histo_abs (EdgeAmplitude, EdgeAmplitude, 8, AbsoluteHistoEdgeAmplitude)</l>
<c>        *装入特征向量数组</c>
<l>        FeaturesExtended := [Energy,Correlation,Homogeneity,Contrast]</l>
<l>        FeaturesExtended := [FeaturesExtended,AbsoluteHistoEdgeAmplitude]</l>
<c>        *生成灰度图像的共生矩阵（计算给定区域的灰度特征值，特征提取）选取木板所对应的区域</c>
<c>        *参数（计算共生矩阵灰度值所对应的区域，对应灰度值的区域图像，要识别灰度值的数量是多少，要被计算的共生矩阵的方向是多少，灰度值的能量，灰度值的相关性，灰度值的均匀性，灰度值的对比度）</c>
<l>        cooc_feature_image (SelectedRegions, Image, 6, 90, Energy, Correlation, Homogeneity, Contrast)</l>
<c>        *由边缘检测进行特征提取（进一步加入特征灰度值的绝对直方图特征）</c>
<c>        *参数（图像，提取的边缘幅度图像，所用的算法，3*3的模板）</c>
<l>        sobel_amp (Image, EdgeAmplitude, 'sum_abs', 3)</l>
<c>        *计算灰度值的绝对直方图</c>
<c>        *参数（要计算灰度直方图的区域，要计算灰度直方图对应的图像，量化因子，计算之后的结果）</c>
<l>        gray_histo_abs (EdgeAmplitude, EdgeAmplitude, 8, AbsoluteHistoEdgeAmplitude)</l>
<c>        *装入特征向量数组</c>
<l>        FeaturesExtended1 := [FeaturesExtended,Energy, Correlation, Homogeneity, Contrast]</l>
<l>        FeaturesExtended1 := [FeaturesExtended1,AbsoluteHistoEdgeAmplitude]</l>
<c>        *对特征向量实数化</c>
<l>        FeatureVector := real(FeaturesExtended1)</l>
<c>        *3.添加样本</c>
<c>        *参数（分类器句柄，特征向量，创建样本对应索引号）</c>
<l>        add_sample_class_mlp (MLPHandle, FeatureVector, i)      </l>
<l>    endfor</l>
<c>    *4.训练分类器</c>
<c>    *参数（句柄，最大迭代次数，两次迭代之间的权重误差，权重误差之间的阈值，均值误差，均值误差）</c>
<l>    train_class_mlp (MLPHandle, 200, 1, 0.01, Error, ErrorLog)</l>
<l>    stop ()</l>
<c>    *写入文件</c>
<l>    write_class_mlp (MLPHandle, 'D://1.gmc')</l>
<l>    for i := 0 to |ImageFiles|-1 by 1</l>
<l>        read_image (Image, ImageFiles[i])</l>
<c>        *三颜色转灰度图</c>
<l>        rgb1_to_gray (Image, GrayImage)</l>
<c>        *二值化提取木板所在的区域</c>
<l>        threshold (GrayImage, Region, 31, 254)</l>
<c>        *断开连通域</c>
<l>        connection (Region, ConnectedRegions)</l>
<c>        *面积选择选出木板所在区域</c>
<c>        </c>
<l>        select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 28935.2, 38564.8)</l>
<l>        Classes := ['apple','beech','cherry','maple','oak']</l>
<c>        *生成灰度图像的共生矩阵（计算给定区域的灰度特征值，特征提取）</c>
<c>        *参数（计算共生矩阵灰度值所对应的区域，对应灰度值的区域图像，要识别灰度值的数量是多少，要被计算的共生矩阵的方向是多少，灰度值的能量，灰度值的相关性，灰度值的均匀性，灰度值的对比度）</c>
<l>        cooc_feature_image (Image, Image, 6, 90, Energy, Correlation, Homogeneity, Contrast)</l>
<c>        *由边缘检测进行特征提取（进一步加入特征灰度值的绝对直方图特征）</c>
<c>        *参数（图像，提取的边缘幅度图像，所用的算法，3*3的模板）</c>
<l>        sobel_amp (Image, EdgeAmplitude, 'sum_abs', 3)</l>
<c>        *计算灰度值的绝对直方图</c>
<c>        *参数（要计算灰度直方图的区域，要计算灰度直方图对应的图像，量化因子，计算之后的结果）</c>
<l>        gray_histo_abs (EdgeAmplitude, EdgeAmplitude, 8, AbsoluteHistoEdgeAmplitude)</l>
<c>        *装入特征向量数组</c>
<l>        FeaturesExtended := [Energy,Correlation,Homogeneity,Contrast]</l>
<l>        FeaturesExtended := [FeaturesExtended,AbsoluteHistoEdgeAmplitude]</l>
<c>        *生成灰度图像的共生矩阵（计算给定区域的灰度特征值，特征提取）选取木板所对应的区域</c>
<c>        *参数（计算共生矩阵灰度值所对应的区域，对应灰度值的区域图像，要识别灰度值的数量是多少，要被计算的共生矩阵的方向是多少，灰度值的能量，灰度值的相关性，灰度值的均匀性，灰度值的对比度）</c>
<l>        cooc_feature_image (SelectedRegions, Image, 6, 90, Energy, Correlation, Homogeneity, Contrast)</l>
<c>        *由边缘检测进行特征提取（进一步加入特征灰度值的绝对直方图特征）</c>
<c>        *参数（图像，提取的边缘幅度图像，所用的算法，3*3的模板）</c>
<l>        sobel_amp (Image, EdgeAmplitude, 'sum_abs', 3)</l>
<c>        *计算灰度值的绝对直方图</c>
<c>        *参数（要计算灰度直方图的区域，要计算灰度直方图对应的图像，量化因子，计算之后的结果）</c>
<l>        gray_histo_abs (EdgeAmplitude, EdgeAmplitude, 8, AbsoluteHistoEdgeAmplitude)</l>
<c>        *装入特征向量数组</c>
<l>        FeaturesExtended1 := [FeaturesExtended,Energy, Correlation, Homogeneity, Contrast]</l>
<l>        FeaturesExtended1 := [FeaturesExtended1,AbsoluteHistoEdgeAmplitude]</l>
<c>        *对特征向量实数化</c>
<l>        FeatureVector := real(FeaturesExtended1)</l>
<c>        *5.识别</c>
<c>        *参数（训练好的模型，要识别图像的特征向量，选取可信度最高的1个累，识别出来的是什么，准确率）</c>
<l>        classify_class_mlp (MLPHandle, FeatureVector, 1, FoundClassIDs, k)</l>
<l>        dev_display (Image)</l>
<l>        ImageFiles1:='found_class:  ' + Classes[FoundClassIDs[0]]</l>
<l>    endfor</l>
<c>    </c>
<c>    </c>
<c>    </c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">endfor</l>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
